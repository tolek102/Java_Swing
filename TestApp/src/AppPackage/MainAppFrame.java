/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.*;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;


/**
 *
 * @author PBachta
 */
public class MainAppFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainAppFrame
     */
    public MainAppFrame() {
        
        initComponents();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupaRozmiar = new javax.swing.ButtonGroup();
        grupaKolor = new javax.swing.ButtonGroup();
        malaCzcionka = new javax.swing.JRadioButton();
        sredniaCzcionka = new javax.swing.JRadioButton();
        duzaCzcionka = new javax.swing.JRadioButton();
        testLabel = new javax.swing.JLabel();
        czerwonaCzcionka = new javax.swing.JRadioButton();
        niebieskaCzcionka = new javax.swing.JRadioButton();
        zielonaCzcionka = new javax.swing.JRadioButton();
        pochylonyCheckBox = new javax.swing.JCheckBox();
        pogrubionyCheckBox = new javax.swing.JCheckBox();
        popUpButton = new javax.swing.JButton();
        wyborButton = new javax.swing.JButton();
        onlyNumbersTextField = new javax.swing.JTextField();
        onluNumbersTextFieldLabel = new javax.swing.JLabel();
        poleTektoweLabel = new javax.swing.JLabel();
        slideryPolaTekstowego = new javax.swing.JScrollPane();
        poleTekstowe = new javax.swing.JTextArea();
        szukajButton = new javax.swing.JButton();
        zamienButton = new javax.swing.JButton();
        szukajTextField = new javax.swing.JTextField();
        zamienTextField = new javax.swing.JTextField();
        szukajLabel = new javax.swing.JLabel();
        zamienLabel = new javax.swing.JLabel();
        motywLabel = new javax.swing.JLabel();
        motywComboBox = new javax.swing.JComboBox<>();
        boredAppButton = new javax.swing.JButton();
        sliderAppButton = new javax.swing.JButton();
        obslugaMenuButton = new javax.swing.JButton();
        malowanieButton = new javax.swing.JButton();
        listaButton = new javax.swing.JButton();
        tabbButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        infoMenu = new javax.swing.JMenu();
        oProgramie_InfoSubMenu = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        autor_InfoSubMenu = new javax.swing.JMenuItem();

        grupaRozmiar.add(malaCzcionka);
        grupaRozmiar.add(sredniaCzcionka);
        grupaRozmiar.add(duzaCzcionka);

        grupaKolor.add(czerwonaCzcionka);
        grupaKolor.add(zielonaCzcionka);
        grupaKolor.add(niebieskaCzcionka);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Java Test App");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        malaCzcionka.setText("mala");
        malaCzcionka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                malaCzcionkaActionPerformed(evt);
            }
        });

        sredniaCzcionka.setText("srednia");
        sredniaCzcionka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sredniaCzcionkaActionPerformed(evt);
            }
        });

        duzaCzcionka.setText("duża");
        duzaCzcionka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duzaCzcionkaActionPerformed(evt);
            }
        });

        testLabel.setText("Test");
        testLabel.setFont(new Font("Monospaced", Font.PLAIN , 15));

        czerwonaCzcionka.setText("czerwony");
        czerwonaCzcionka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                czerwonaCzcionkaActionPerformed(evt);
            }
        });

        niebieskaCzcionka.setText("niebieski");
        niebieskaCzcionka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                niebieskaCzcionkaActionPerformed(evt);
            }
        });

        zielonaCzcionka.setText("zielony");
        zielonaCzcionka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zielonaCzcionkaActionPerformed(evt);
            }
        });

        pochylonyCheckBox.setText("pochylony");
        pochylonyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pochylonyCheckBoxActionPerformed(evt);
            }
        });

        pogrubionyCheckBox.setText("pogrubiony");
        pogrubionyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pogrubionyCheckBoxActionPerformed(evt);
            }
        });

        popUpButton.setText("PopUp");
        popUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popUpButtonActionPerformed(evt);
            }
        });

        wyborButton.setText("Wybór");
        wyborButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyborButtonActionPerformed(evt);
            }
        });

        onlyNumbersTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                onlyNumbersTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onlyNumbersTextFieldKeyTyped(evt);
            }
        });

        onluNumbersTextFieldLabel.setText("Pole tekstowe przyjmujące tylko cyfry:");

        poleTektoweLabel.setText("Pole Tekstowe:");

        poleTekstowe.setColumns(20);
        poleTekstowe.setRows(5);
        slideryPolaTekstowego.setViewportView(poleTekstowe);
        poleTekstowe.setText("To jest tekst początkowy pola tekstowego");

        szukajButton.setText("Szukaj");
        szukajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                szukajButtonActionPerformed(evt);
            }
        });

        zamienButton.setText("Zamień");
        zamienButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamienButtonActionPerformed(evt);
            }
        });

        szukajTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                szukajTextFieldActionPerformed(evt);
            }
        });

        szukajLabel.setText("Wyszukaj w polu tekstowym:");

        zamienLabel.setText("Zamień znalezione na:");

        motywLabel.setText("Zmiana Motywu okna");

        motywComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nimbus", "Metal", "Motif", "Windows" }));
        motywComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motywComboBoxActionPerformed(evt);
            }
        });

        boredAppButton.setText("Okienko Border");
        boredAppButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boredAppButtonActionPerformed(evt);
            }
        });

        sliderAppButton.setText("Okienko Slider");
        sliderAppButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sliderAppButtonActionPerformed(evt);
            }
        });

        obslugaMenuButton.setText("Obsługa menu");
        obslugaMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obslugaMenuButtonActionPerformed(evt);
            }
        });

        malowanieButton.setText("Malowanie");
        malowanieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                malowanieButtonActionPerformed(evt);
            }
        });

        listaButton.setText("Lista");
        listaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaButtonActionPerformed(evt);
            }
        });

        tabbButton.setText("Tabb");
        tabbButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabbButtonActionPerformed(evt);
            }
        });

        fileMenu.setText("File");
        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar1.add(editMenu);

        infoMenu.setText("Info");

        oProgramie_InfoSubMenu.setText("O Programie");
        oProgramie_InfoSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oProgramie_InfoSubMenuActionPerformed(evt);
            }
        });
        infoMenu.add(oProgramie_InfoSubMenu);
        infoMenu.add(jSeparator1);

        autor_InfoSubMenu.setText("Autor");
        autor_InfoSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autor_InfoSubMenuActionPerformed(evt);
            }
        });
        infoMenu.add(autor_InfoSubMenu);

        jMenuBar1.add(infoMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(slideryPolaTekstowego)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(malaCzcionka)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(czerwonaCzcionka)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pochylonyCheckBox))
                                    .addComponent(poleTektoweLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(szukajButton)
                                            .addComponent(zamienButton)
                                            .addComponent(tabbButton))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(szukajLabel)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(szukajTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                                        .addComponent(zamienTextField))
                                                    .addComponent(zamienLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(sliderAppButton)
                                                    .addComponent(boredAppButton)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(listaButton)
                                                            .addComponent(malowanieButton))))))))
                                .addGap(23, 23, 23)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sredniaCzcionka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(niebieskaCzcionka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pogrubionyCheckBox))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(duzaCzcionka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zielonaCzcionka)
                                .addGap(28, 28, 28)
                                .addComponent(testLabel))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(onlyNumbersTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(onluNumbersTextFieldLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wyborButton)
                                    .addComponent(popUpButton)
                                    .addComponent(motywComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(obslugaMenuButton)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(motywLabel)
                                .addGap(26, 26, 26))))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {czerwonaCzcionka, duzaCzcionka, malaCzcionka, niebieskaCzcionka, pochylonyCheckBox, pogrubionyCheckBox, sredniaCzcionka, zielonaCzcionka});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(wyborButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(malaCzcionka)
                            .addComponent(czerwonaCzcionka)
                            .addComponent(pochylonyCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sredniaCzcionka)
                            .addComponent(niebieskaCzcionka)
                            .addComponent(pogrubionyCheckBox)
                            .addComponent(popUpButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(duzaCzcionka)
                                    .addComponent(zielonaCzcionka)
                                    .addComponent(obslugaMenuButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(testLabel)))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onluNumbersTextFieldLabel)
                    .addComponent(motywLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onlyNumbersTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(motywComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(poleTektoweLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slideryPolaTekstowego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(szukajLabel)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(szukajButton)
                    .addComponent(szukajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boredAppButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zamienLabel)
                    .addComponent(sliderAppButton))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zamienButton)
                    .addComponent(zamienTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(malowanieButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listaButton)
                    .addComponent(tabbButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {duzaCzcionka, malaCzcionka, sredniaCzcionka});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sredniaCzcionkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sredniaCzcionkaActionPerformed
        int styl = testLabel.getFont().getStyle();   //pobiera aktualny styl czcionki (pogrubienie, pochylenie)
        testLabel.setFont(new Font("Monospaced", styl, 15));   //ustawia nowy rozmiar czcionki zachowując jej styl
    }//GEN-LAST:event_sredniaCzcionkaActionPerformed

    private void malaCzcionkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malaCzcionkaActionPerformed
        int styl = testLabel.getFont().getStyle();   //pobiera aktualny styl czcionki (pogrubienie, pochylenie)
        testLabel.setFont(new Font("Monospaced", styl, 10));    //ustawia nowy rozmiar czcionki zachowując jej styl
    }//GEN-LAST:event_malaCzcionkaActionPerformed

    private void duzaCzcionkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duzaCzcionkaActionPerformed
       int styl = testLabel.getFont().getStyle();   //pobiera aktualny styl czcionki (pogrubienie, pochylenie)
       testLabel.setFont(new Font("Monospaced", styl, 20)); //ustawia nowy rozmiar czcionki zachowując jej styl
    }//GEN-LAST:event_duzaCzcionkaActionPerformed

    private void czerwonaCzcionkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_czerwonaCzcionkaActionPerformed
       testLabel.setForeground(Color.RED);
    }//GEN-LAST:event_czerwonaCzcionkaActionPerformed

    private void niebieskaCzcionkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_niebieskaCzcionkaActionPerformed
       testLabel.setForeground(Color.BLUE);
    }//GEN-LAST:event_niebieskaCzcionkaActionPerformed

    private void zielonaCzcionkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zielonaCzcionkaActionPerformed
       testLabel.setForeground(Color.GREEN);
    }//GEN-LAST:event_zielonaCzcionkaActionPerformed

    private void pochylonyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pochylonyCheckBoxActionPerformed
        zmienStylCzcionki();
        //ZmianaStyluCzcionki zmiana = new ZmianaStyluCzcionki();
        //zmiana.zmienStylCzcionki();
    }//GEN-LAST:event_pochylonyCheckBoxActionPerformed

    private void pogrubionyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pogrubionyCheckBoxActionPerformed
        zmienStylCzcionki();
        //ZmianaStyluCzcionki zmiana = new ZmianaStyluCzcionki();
        //zmiana.zmienStylCzcionki();
    }//GEN-LAST:event_pogrubionyCheckBoxActionPerformed

    private void popUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popUpButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Wiadomość testowa po wciśnięciu przycisku", "Okienko PopUp", ERROR_MESSAGE);
    }//GEN-LAST:event_popUpButtonActionPerformed

    private void wyborButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyborButtonActionPerformed
        JOptionPane.showConfirmDialog(rootPane, "Pytanie do użytkownika ??", "Pytanie", YES_NO_CANCEL_OPTION, QUESTION_MESSAGE);
    }//GEN-LAST:event_wyborButtonActionPerformed

    private void oProgramie_InfoSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oProgramie_InfoSubMenuActionPerformed
       String msg = "<html>Program testowy.<br/>"       // <br/> wstawia enter w tekście
               + "Moje pierwsze kroki w Javie<html>"; 
        JOptionPane.showMessageDialog(rootPane, msg, "Informacje o programie", INFORMATION_MESSAGE);   //można dodawać jako tekst okna kod napisany w html - zmienna msg
    }//GEN-LAST:event_oProgramie_InfoSubMenuActionPerformed

    private void autor_InfoSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autor_InfoSubMenuActionPerformed
        String msg = "<html>Autorem programu jest Paweł Bachta<br/>"
                + "Wszystkie prawa zastrzeżone<br/>"
                + "<br/>"
                + "W razie pytań proszę pisać na maila:<br/>"
                + "bachta.pawel@gmail.com";
        JOptionPane.showMessageDialog(rootPane, msg, "Informacje o Autorze", INFORMATION_MESSAGE);
    }//GEN-LAST:event_autor_InfoSubMenuActionPerformed

    private void onlyNumbersTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onlyNumbersTextFieldKeyTyped
        if(!jestLiczba(evt.getKeyChar()))       //sprawdza czy wciśnięty klawisz NIE JEST liczbą poprzez funkcje "jestLiczba"
        evt.consume();                          //jeśli nie jest liczbą to nie wypisze tego znaku w polu tekstowym, znak zostanie "skonsumowany"
    }//GEN-LAST:event_onlyNumbersTextFieldKeyTyped

    private void onlyNumbersTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onlyNumbersTextFieldKeyPressed
        //Zabezpieczenie pola tekstowego przed możliwością wklejenia tekstu (zablokowanie  ctrl+V)
        //Robimy tak bo w naszym polu tekstowym bez tego można wpisać tylko cyfry ale wkleić już można cokolwiek

        if(evt.isControlDown() && evt.getKeyCode() == KeyEvent.VK_V)        //jeśli jest wciśnięty "ctrl" oraz "V"
        {
            // evt.consume();    jeśli dali byśmy tylko to to wklejanie czegokolwiek do pola tekstowego było by niemożliwe

            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();     //pobranie danych ze schowka systemowego
            DataFlavor flavor = DataFlavor.stringFlavor;                                //zmienna która będzie jako dane wejściowe przyjmowała tylko string (bo w schowku też przecież może być obazek czy inny typ "danych"
            String schowek = "";                                                        //zmienna schowek do której będziemy przepisywać dane z systemowego schowka
            
                try
                {
                    schowek = (String)clipboard.getData(flavor);    //wpisujemy do schowka dane ze schowka systemowego rzutowanego wcześniej na stringa
                }
                catch (UnsupportedFlavorException ex)               //jeśli wykryto że typ danych wejściowych (flavor) jest nieobsługiwany
                {
                    System.out.println("To nie jest String");
                }
                catch (IOException ex)                              //jakiś błąd wejścia/wyjścia
                {
                    System.out.println("Wystąpił błąd wejścia/wyjścia");
                }
	
	// pętla do sprawdzania czy w skopiowanym tekscie nie ma innych znaków niż liczby, 
        // jeśli jest chociaż jeden taki znak to tekst zostanie skonsumowany i się nie wklei
	
                for(int i=0; i < schowek.length(); i++)         // pętla sprawdzająca każdy znak po kolei w skopiowanym stringu
                    if(!jestLiczba(schowek.charAt(i)))          //jeśli sprawdzany znak nie jest liczbą [charAt(i) sprawdza znak na pozycji "i"]
                    {
                        evt.consume();                          //skonsumuj znak
                        break;                                  //zakończ pętle
                    }

        }
                

    }//GEN-LAST:event_onlyNumbersTextFieldKeyPressed

    private void szukajTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_szukajTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_szukajTextFieldActionPerformed

    private void szukajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_szukajButtonActionPerformed
        // po wciśnięciu guzika wyszuka on tekst (wpisany w polu szukaj) w polu tekstowym i go zaznaczy
        
        poczatekSzukania = poleTekstowe.getText().indexOf(szukajTextField.getText(), poczatekSzukania+dlugoscSzukanegoSlowa);  //indeks początkowy w polu tekstowym szukanego ciągu znaków IndexOf(czego szuka, gdzie zaczyna szukać)
        dlugoscSzukanegoSlowa = szukajTextField.getText().length();     // jaką długość ma ciąg znaków wpisanych w pole szukaj
                       
        if (poczatekSzukania == -1)  //jeśli nie znaleziono szukanego słowa (-1 oznacza że nie znaleziono indeksu)
            poczatekSzukania = poleTekstowe.getText().indexOf(szukajTextField.getText());   //zacznij szukać od początku pola tekstowego/pierwszego znalezionego ciągu znaków z pola szukaj
        
        if (poczatekSzukania >= 0 && dlugoscSzukanegoSlowa >0)      //jeśli znaleziono szukane słowo i mamy jego indeks początkowy oraz szukane złowo ma dłuhgość przynajmniej jednego znaku(cokolwiek jest wpisane w pole Szukaj)
        {
            poleTekstowe.requestFocus();  // fokus na pole tekstowe żeby było widać czy się zaznaczyło
            poleTekstowe.select(poczatekSzukania,poczatekSzukania+dlugoscSzukanegoSlowa);   // wyszukuje w tekście pierwszy napotkany ciąg znaków wpisany w pole szukaj i zaznacza je 
                    //(czyli znajduje szukane słowo od punktu znalezienia czyli jego początku i zaznacza do momentu jego zakończenia czyli początku + jego długości
        }
    }//GEN-LAST:event_szukajButtonActionPerformed

    private void zamienButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamienButtonActionPerformed
        if (poleTekstowe.getSelectionStart() != poleTekstowe.getSelectionEnd())  //jeśli tekst w polu tekstowym jest zaznaczony
            {
               zamienTekst();   //wykonaj metodę zamienTekst
            }
        else  //jesli tekst nie jest zaznaczony
            {
               szukajButton.doClick(0);  //wciska przycisk "Szukaj"
               if (poleTekstowe.getSelectionStart() != poleTekstowe.getSelectionEnd())  //jesli czoś znajdzie to to zaznacza(wynika z funkcji szukaj)
                 zamienTekst();  //wykonuje metode zamienTekst na zaznaczonym tekscie
            }
    }//GEN-LAST:event_zamienButtonActionPerformed

    private void motywComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motywComboBoxActionPerformed

        String nazwaWygladu = "";
        
        // sprawdzanie które pole jest zaznaczonez ComboBoxa i przypisuje wartość do zmiennej nazwa wyglądu
        // i tej wygląd zostanie później ustawiony
        if (((JComboBox)evt.getSource()).getSelectedItem().equals("Nimbus"))  
                nazwaWygladu = "javax.swing.plaf.nimbus.NimbusLookAndFeel";
        if (((JComboBox)evt.getSource()).getSelectedItem().equals("Metal"))  
                nazwaWygladu = "javax.swing.plaf.metal.MetalLookAndFeel";
        else if (((JComboBox)evt.getSource()).getSelectedItem().equals("Motif"))
                nazwaWygladu = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";
        else if (((JComboBox)evt.getSource()).getSelectedItem().equals("Windows"))
                nazwaWygladu = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";
       
        
        // try i wszystkie wyjątki catch dodane automatycznie
        try {
            UIManager.setLookAndFeel(nazwaWygladu);        //funkcja obsługująca ustawianie motywu okienka
            SwingUtilities.updateComponentTreeUI(this);  // Odświeżenie całego okna po zmianie motywu, inaczej motyw się nie zmieni
        
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_motywComboBoxActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
     // Wyskakujące okienko do potwierdzenia po wciśnięciu przycisku zamknięcia programu
     //żeby to dobrze działało opcje deafoultCloseOperation trzeba ustawić na DO_NOTHINK
        int okienkoZamkniecia = JOptionPane.showConfirmDialog(rootPane,"Czy na pewno chcesz zamknąć program??" , "Zamykanie programu", JOptionPane.YES_NO_OPTION); //wyskakujące okienko (obiekt,komunikat,tytuł okienka, opcje wyboru)
        if (okienkoZamkniecia==0)  //jeśli wartość 0 czyli wciśnięto tak 
            //this.dispose();     //zamyka tylko główne okno programu
            System.exit(0);        //zamyka cały program
         
    }//GEN-LAST:event_formWindowClosing

    private void boredAppButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boredAppButtonActionPerformed
        new BordersAppFrame(taRamka).setVisible(true);  //tworzymy okienko z klasy BorderAppFrame i ustawiamy je jako widoczne (inaczej się nie wyświetli)
        //taRamka w nawiasie po to żeby przesyłać informacje o głównej ramce, potrzebne do funcji które nie będzie pozwalała na klikanie w głównej ramce jak ramka Border jest otwarta
        //zmienna taRamka stworzona na dole  private JFrame taRamka = this;
    }//GEN-LAST:event_boredAppButtonActionPerformed

    private void sliderAppButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sliderAppButtonActionPerformed
        new SliderAppFrame(taRamka).setVisible(true);   //tworzymy okienko z klasy SliderAppFrame i ustawiamy je jako widoczne (inaczej się nie wyświetli)
        //taRamka w nawiasie po to żeby przesyłać informacje o głównej ramce, potrzebne do funcji które nie będzie pozwalała na klikanie w głównej ramce jak ramka Slider jest otwarta
        //zmienna taRamka stworzona na dole  private JFrame taRamka = this;
    }//GEN-LAST:event_sliderAppButtonActionPerformed

    private void obslugaMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obslugaMenuButtonActionPerformed
        new ObslugaMenuAppFrame().setVisible(true);
    }//GEN-LAST:event_obslugaMenuButtonActionPerformed

    private void malowanieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malowanieButtonActionPerformed
        new ToolbarAppFrame().setVisible(true);
    }//GEN-LAST:event_malowanieButtonActionPerformed

    private void listaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaButtonActionPerformed
        new ListaAppFrame().setVisible(true);
    }//GEN-LAST:event_listaButtonActionPerformed

    private void tabbButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabbButtonActionPerformed
        new TabbedAppJFrame().setVisible(true);
    }//GEN-LAST:event_tabbButtonActionPerformed
//___________________________________________________________________________________________________________________
     //funkcja do CheckBoxów pochylony i pogrubiony:
    private void zmienStylCzcionki()
    {
        int style = Font.PLAIN;    //jak nic nie zaznaczone to zwyky styl czcionki 
        if (pochylonyCheckBox.isSelected()) style += Font.ITALIC;  // jeśli zaznaczony pochylony to do stylu obecnego dodaje styl italic
        if (pogrubionyCheckBox.isSelected()) style += Font.BOLD;   // jeśli zaznaczony pogrubiony to do stylu obecnego dodaje styl bold
        
        testLabel.setFont(new Font(testLabel.getFont().getFamily(), style , testLabel.getFont().getSize()));  // ustawia czcionke textu nie zmieniając jego rozmiaru i koloru a styl; ustawia na "style"
    }    
    //_________________________________________
//
    // funkcja do pola tekstowego do obsługi tylko cyfr
    private boolean jestLiczba(char znak)   //funkcja będzie zwracała true lub false
    {
	if(znak >='0' && znak <='9')    //jeśli przesłany znak jest liczbą
		return true;            //wyślij true
		
	return false;                   //w innym przypadku wyślij false
    }

//___________________________________________________________________________________________________________________    
    //funkcja do zamiany tekstu jeśli tekst jest już zaznaczony, jeśli nie jest to wyszukuje tekst z pola szukaj i zamienia go na ten w polu znajdz
    private void zamienTekst()
        {
            poleTekstowe.requestFocus();
            int opcja = JOptionPane.showConfirmDialog(rootPane, "Czy chcesz zamienić \""+szukajTextField.getText()+"\" na \""+zamienTextField.getText()+"\"", "Uwaga, nastąpi zmiana!", JOptionPane.YES_NO_OPTION);  // okienko potwierdzające chęć zamiany tekstu
            if (opcja == 0)
              poleTekstowe.replaceRange(zamienTextField.getText(), poleTekstowe.getSelectionStart(), poleTekstowe.getSelectionEnd());  //zamiana zaznaczonego tekstu na ten z pola zamień
        }
    
    
    
//___________________________________________________________________________________________________________    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainAppFrame().setVisible(true);
                
            }
        });
    }
    private javax.swing.JFrame taRamka = this;  //do wysyłania jako parrent do pozostałych ramek
    int poczatekSzukania = 0;  //zmienna do znajdowania początku indeksu szukanego słowa w polu tekstowym
    int dlugoscSzukanegoSlowa = 0; // zmienna do określania jaką długość ma ciąg znaków wpisanych w pole szukaj
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem autor_InfoSubMenu;
    private javax.swing.JButton boredAppButton;
    private javax.swing.JRadioButton czerwonaCzcionka;
    private javax.swing.JRadioButton duzaCzcionka;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.ButtonGroup grupaKolor;
    private javax.swing.ButtonGroup grupaRozmiar;
    private javax.swing.JMenu infoMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton listaButton;
    private javax.swing.JRadioButton malaCzcionka;
    private javax.swing.JButton malowanieButton;
    private javax.swing.JComboBox<String> motywComboBox;
    private javax.swing.JLabel motywLabel;
    private javax.swing.JRadioButton niebieskaCzcionka;
    private javax.swing.JMenuItem oProgramie_InfoSubMenu;
    private javax.swing.JButton obslugaMenuButton;
    private javax.swing.JLabel onluNumbersTextFieldLabel;
    private javax.swing.JTextField onlyNumbersTextField;
    javax.swing.JCheckBox pochylonyCheckBox;
    javax.swing.JCheckBox pogrubionyCheckBox;
    private javax.swing.JTextArea poleTekstowe;
    private javax.swing.JLabel poleTektoweLabel;
    private javax.swing.JButton popUpButton;
    private javax.swing.JButton sliderAppButton;
    private javax.swing.JScrollPane slideryPolaTekstowego;
    private javax.swing.JRadioButton sredniaCzcionka;
    private javax.swing.JButton szukajButton;
    private javax.swing.JLabel szukajLabel;
    private javax.swing.JTextField szukajTextField;
    private javax.swing.JButton tabbButton;
    javax.swing.JLabel testLabel;
    private javax.swing.JButton wyborButton;
    private javax.swing.JButton zamienButton;
    private javax.swing.JLabel zamienLabel;
    private javax.swing.JTextField zamienTextField;
    private javax.swing.JRadioButton zielonaCzcionka;
    // End of variables declaration//GEN-END:variables

    
}
