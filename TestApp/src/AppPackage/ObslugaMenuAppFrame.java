/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;
import javax.swing.*;
/**
 *
 * @author PBachta
 */
public class ObslugaMenuAppFrame extends JFrame {

    /**
     * Creates new form ObslugaMenuAppFrame
     */
    public ObslugaMenuAppFrame() {
        
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        poleTextowePopupMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        framePopupMenu = new javax.swing.JPopupMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        poleTextowe = new javax.swing.JTextArea();
        PasekMenu = new javax.swing.JMenuBar();
        menuPlik = new javax.swing.JMenu();
        menuItemOtworz = new javax.swing.JMenuItem();
        menuItemZapisz = new javax.swing.JMenuItem();
        podmenuOpcje = new javax.swing.JMenu();
        podmenuItemOpcja1 = new javax.swing.JMenuItem();
        podmenuItemOpcja2 = new javax.swing.JMenuItem();
        podmenuItemTylkoOdczyt = new javax.swing.JCheckBoxMenuItem();

        poleTextowePopupMenu.setName(""); // NOI18N

        jMenuItem1.setText("Opcja 1");
        poleTextowePopupMenu.add(jMenuItem1);

        jMenuItem2.setText("Opcja 2");
        poleTextowePopupMenu.add(jMenuItem2);

        jMenuItem3.setText("Opcja 3");
        poleTextowePopupMenu.add(jMenuItem3);

        poleTextowePopupMenu.getAccessibleContext().setAccessibleName("");

        jMenuItem4.setText("Opcja 4");
        jMenuItem4.setToolTipText("");
        framePopupMenu.add(jMenuItem4);

        jMenuItem5.setText("Opcja 5");
        framePopupMenu.add(jMenuItem5);

        jMenuItem6.setText("Opcja 6");
        framePopupMenu.add(jMenuItem6);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        poleTextowe.setColumns(20);
        poleTextowe.setRows(5);
        poleTextowe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                poleTextoweMouseReleased(evt);
            }
        });
        poleTextowe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                poleTextoweKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                poleTextoweKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(poleTextowe);

        menuPlik.setMnemonic('P');
        menuPlik.setText("Plik");

        menuItemOtworz.setMnemonic('O');
        menuItemOtworz.setText("Otwórz");
        menuPlik.add(menuItemOtworz);

        menuItemZapisz.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemZapisz.setMnemonic('Z');
        menuItemZapisz.setText("Zapisz");
        menuItemZapisz.setToolTipText("Zapisuje plik na dysku");
        menuItemZapisz.setEnabled(flagaPolaTextowego);
        menuItemZapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemZapiszActionPerformed(evt);
            }
        });
        menuPlik.add(menuItemZapisz);

        podmenuOpcje.setText("Opcje");

        podmenuItemOpcja1.setMnemonic('1');
        podmenuItemOpcja1.setText("Opcja1");
        podmenuOpcje.add(podmenuItemOpcja1);

        podmenuItemOpcja2.setMnemonic('2');
        podmenuItemOpcja2.setText("Opcja2");
        podmenuOpcje.add(podmenuItemOpcja2);

        podmenuItemTylkoOdczyt.setMnemonic('T');
        podmenuItemTylkoOdczyt.setSelected(true);
        podmenuItemTylkoOdczyt.setText("Tylko do odczytu");
        podmenuItemTylkoOdczyt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                podmenuItemTylkoOdczytActionPerformed(evt);
            }
        });
        podmenuOpcje.add(podmenuItemTylkoOdczyt);

        menuPlik.add(podmenuOpcje);

        PasekMenu.add(menuPlik);

        setJMenuBar(PasekMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void poleTextoweKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_poleTextoweKeyPressed
        if(podmenuItemTylkoOdczyt.isSelected())   //jeśli checkbox "Tylko do odczytu" jest zaznaczony
        {   
            evt.consume();      //konsumij każdy event wciskania bylejakiego przycisku
            //menuItemZapisz.setEnabled(flagaPolaTextowego=false); //ustaw "widoczność" przycisku "Zapisz" na fasle
            setFlagaPolaTextowego(false);
        }
        
        //jeśli tekst w polu tekstowym jest różny od tekstu z poprzedniego zapisu i wciśniety klawisz jest klawiszem ASCII
        else if (!(poleTextowe.getText()+evt.getKeyChar()).equals(przedZmianaPolaTekstowego) && czyToAscii(evt.getKeyChar()))
        {
            przedZmianaPolaTekstowego = poleTextowe.getText()+evt.getKeyChar();  //do zmiennej w momencie zapisania wpisz aktualny tekst z pola tekstowego
            //menuItemZapisz.setEnabled(flagaPolaTextowego=true); //ustaw "widoczność" przycisku "Zapisz" na True, bo tekst się zmieniał od poprzedniego zapisu
            setFlagaPolaTextowego(true);
        }
            
    }//GEN-LAST:event_poleTextoweKeyPressed

    private void poleTextoweKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_poleTextoweKeyTyped
        if(podmenuItemTylkoOdczyt.isSelected())   //jeśli checkbox "Tylko do odczytu" jest zaznaczony
        {
            evt.consume();  //konsumij każdy event próby pisania
            //menuItemZapisz.setEnabled(flagaPolaTextowego=false); //ustaw "widoczność" przycisku "Zapisz" na fasle
            setFlagaPolaTextowego(false);
        }      
        
    }//GEN-LAST:event_poleTextoweKeyTyped

    private void menuItemZapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemZapiszActionPerformed
        zapisz();
    }//GEN-LAST:event_menuItemZapiszActionPerformed

    private void podmenuItemTylkoOdczytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_podmenuItemTylkoOdczytActionPerformed
        if (podmenuItemTylkoOdczyt.isSelected())   //jeśli tylko do odczytu jest zaznaczony
            //menuItemZapisz.setEnabled(false);       //deaktywuj przycisk Zapisz
            setFlagaPolaTextowego(false);
        else 
           //menuItemZapisz.setEnabled(flagaPolaTextowego);  //w innym przypadku urzyj flagi do określenia czy przycisk zapisz aktywny czy nie
            menuItemZapisz.setEnabled(isFlagaPolaTextowego());
        
            
    }//GEN-LAST:event_podmenuItemTylkoOdczytActionPerformed

    private void poleTextoweMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poleTextoweMouseReleased
        if (evt.isPopupTrigger()) //jeśli kliknięto prawym przyciskiem myszy [można to też zrobić tak: (evt.getButton() == MouseEvent.BUTTON3) 
            poleTextowePopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());   //włącza nasze popup menu po kliknięciu w miejscu gdzie zostało kliknięte
    }//GEN-LAST:event_poleTextoweMouseReleased

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        if (evt.isPopupTrigger()) //jeśli kliknięto prawym przyciskiem myszy [można to też zrobić tak: (evt.getButton() == MouseEvent.BUTTON3) 
            framePopupMenu.show(evt.getComponent(), evt.getX(), evt.getY());   //włącza nasze popup menu po kliknięciu w miejscu gdzie zostało kliknięte
    }//GEN-LAST:event_formMouseReleased

//__________Funkcja do sprawdzania czy wciśnięty klawisz jest klawiszem ASCII (liczby, cyfry itp)_________________
//jesli klawisz to ASCII zwraca true, jeśli nie jest (np F1 itp.) zwraca false
    
    private boolean czyToAscii(char zn)
    {
        for (int i = 0; i < 255; i++)
            if (zn == i)
                return true;
        return false;
    }     
//________________________________________________________        
    
//_____________Funkcja do zapisywania na dysku________________
private void zapisz()
{
    System.out.println("Plik został zapisany na dysku");
    //menuItemZapisz.setEnabled(flagaPolaTextowego=false);  //ustawia flage na false żeby "zdeaktywować" przyscisk Zapisz
    setFlagaPolaTextowego(false);

}
//_______________________________________________________    

//_____Setter i getter do flagi pola tekstowego i do ustawiania widoczności przycisku Zapisz____

    public boolean isFlagaPolaTextowego() {  //getter do pobierania wartośći flagi pola tekstowego
        return flagaPolaTextowego;
    }

    public void setFlagaPolaTextowego(boolean flagaPolaTextowego) {  //setter 
        this.flagaPolaTextowego = flagaPolaTextowego;               //ustaw przysłaną wartość flagi
        if(!(staraFlagaPolaTekstowego == flagaPolaTextowego))       //jeśli flaga różni się od poprzedniej
        {
            menuItemZapisz.setEnabled(flagaPolaTextowego);          //zmień widoczność przycisku flagi na wartość z otrzymanej flagi
            staraFlagaPolaTekstowego = flagaPolaTextowego;          //zapisz nową flagę w starej   
        }
    }
//________________________________________________________

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObslugaMenuAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObslugaMenuAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObslugaMenuAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObslugaMenuAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        // setVisible robimy już z poziomu ramki głównej        
        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ObslugaMenuAppFrame().setVisible(true);
//            }
//        });
    }
    
    private String przedZmianaPolaTekstowego = "";  //String do którego będzie wpisywany teks po wciśnięciu zapisz, potrzebny do porównywania czy po kliknięciu zapisz tekst został zmieniony
    private boolean flagaPolaTextowego = false; //flaga która będzie określała czy były jakieś zmiany w polu textorym od ostatniegi wciśniecia przycisku "Zapisz"
    private boolean staraFlagaPolaTekstowego = false;  //flaga do sprawdzania czy flaga się zmieniła czy nie
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar PasekMenu;
    private javax.swing.JPopupMenu framePopupMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuItemOtworz;
    private javax.swing.JMenuItem menuItemZapisz;
    private javax.swing.JMenu menuPlik;
    private javax.swing.JMenuItem podmenuItemOpcja1;
    private javax.swing.JMenuItem podmenuItemOpcja2;
    private javax.swing.JCheckBoxMenuItem podmenuItemTylkoOdczyt;
    private javax.swing.JMenu podmenuOpcje;
    private javax.swing.JTextArea poleTextowe;
    private javax.swing.JPopupMenu poleTextowePopupMenu;
    // End of variables declaration//GEN-END:variables
}
